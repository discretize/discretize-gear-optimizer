{
  "env": {
    "browser": true,
    "es6": true,
    "jquery": true
  },
  "plugins": ["@typescript-eslint", "@jambit/eslint-plugin-typed-redux-saga"],
  "extends": [
    "react-app",
    "airbnb/whitespace",
    "airbnb/hooks",
    "plugin:jsdoc/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "ignorePatterns": ["/plugins/*", "wasm_module/"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    // disabled or reduced
    "no-restricted-syntax": "off",
    "no-plusplus": "off",
    "func-names": "off",
    "no-continue": "off",
    "no-param-reassign": ["warn", { "props": false }],
    "consistent-return": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "argsIgnorePattern": "^e$|^theme$|^_", "varsIgnorePattern": "^e$|^theme$|^_" }
    ],
    "lines-between-class-members": ["warn", "always", { "exceptAfterSingleLine": true }],

    // temp
    "react/prop-types": "off",
    "react/jsx-props-no-spreading": "off",

    // plugin-jsdoc defaults are quite problematic
    "jsdoc/require-jsdoc": "off",
    "jsdoc/require-param-description": "off",
    "jsdoc/require-returns": "off", // breaks @yield
    "jsdoc/tag-lines": "off", // breaks @example

    // prettier compat
    "arrow-body-style": "off",
    "prefer-arrow-callback": "off",

    "id-length": [
      "warn",
      {
        "exceptions": [
          // counters and comparisons
          "i",
          "j",
          "a",
          "b",
          // events and errors
          "e",
          // i18next translation function
          "t",
          // unused arguments
          "_",
          // mui system margin/padding
          "m",
          "p"
        ]
      }
    ],

    "react/function-component-definition": "off",

    // typescript:
    "react/jsx-filename-extension": ["warn", { "extensions": [".jsx", ".tsx"] }],
    "import/extensions": [
      "warn",
      "ignorePackages",
      { "js": "never", "jsx": "never", "ts": "never", "tsx": "never" }
    ],
    // Replace base rules with typescript-aware rules
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    // Being explicit about types is sometimes good
    "@typescript-eslint/no-inferrable-types": "off",
    // We want to enable these eventually
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off"
  },
  "overrides": [
    {
      "files": ["extract_context_injection/*", "*"],
      "rules": {
        "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
        "no-console": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "rules": {
        // Disable these rules on javascript files because they would enforce new rules or yield false positives.
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-use-before-define": "off"
      }
    },
    {
      "files": ["*.ts"],
      "rules": {
        "@jambit/typed-redux-saga/use-typed-effects": "error",
        "@jambit/typed-redux-saga/delegate-effects": "error"
      }
    }
  ]
}
