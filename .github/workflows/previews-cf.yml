name: 'Deploy: Cloudflare PR Preview'
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  
env:
  PAGES_PROJECT_NAME: discretize-optimizer
  NODE_VERSION: 18
  
jobs:
  # see https://github.com/orgs/community/discussions/26726, https://stackoverflow.com/a/70249520
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check-secret-step.outputs.exists }}
    steps:
      - name: Check that secrets exist
        id: check-secret-step
        run: |
          if [ "${{ secrets.CF_GLOBAL_APIKEY }}" != '' ]; then
            echo "exists=true" >> $GITHUB_OUTPUT;
          else
            echo "exists=false" >> $GITHUB_OUTPUT;
          fi

  deployment:
    needs: [check-secrets]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    if: >
      needs.check-secrets.outputs.exists == 'true'
      !contains(github.event.head_commit.message, 'skip ci') &&
      !contains(github.event.pull_request.body, '[no previews]') &&
      (contains(github.event.pull_request.body, '[draft previews]') || github.event.pull_request.draft == false)
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Cache dependencies
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
      - name: Compile WASM
        run: yarn wasm
      - name: Build
        run: yarn build

      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CF_GLOBAL_APIKEY }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ env.PAGES_PROJECT_NAME }}
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
