name: 'Deploy: Cloudflare'

on:
  push:
    branches:
      - staging
  workflow_dispatch:
  
env:
  PAGES_PROJECT_NAME: discretize-optimizer
  NODE_VERSION: 18
  
jobs:
  deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Cache dependencies
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
      - name: Compile WASM
        run: yarn wasm
      - name: Build
        run: yarn build

      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CF_GLOBAL_APIKEY }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ env.PAGES_PROJECT_NAME }}
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
